[{"C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\index.js":"1","C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\App.js":"2","C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\reportWebVitals.js":"3","C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\components\\NavBar.jsx":"4","C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\components\\Home.jsx":"5","C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\components\\CreateBreed.jsx":"6","C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\components\\Landing-page.jsx":"7","C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\store\\store.js":"8","C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\reducer\\reducer.js":"9","C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\components\\Detail.jsx":"10","C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\actions\\actions.js":"11","C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\components\\DogCard.jsx":"12","C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\components\\pages.jsx":"13"},{"size":731,"mtime":1668435419481,"results":"14","hashOfConfig":"15"},{"size":744,"mtime":1668714457209,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1667829889008,"results":"17","hashOfConfig":"15"},{"size":790,"mtime":1669764682185,"results":"18","hashOfConfig":"15"},{"size":6215,"mtime":1669814333135,"results":"19","hashOfConfig":"15"},{"size":6973,"mtime":1669764285558,"results":"20","hashOfConfig":"15"},{"size":478,"mtime":1669744599077,"results":"21","hashOfConfig":"15"},{"size":394,"mtime":1669072654715,"results":"22","hashOfConfig":"15"},{"size":2444,"mtime":1669813950757,"results":"23","hashOfConfig":"15"},{"size":887,"mtime":1669757253778,"results":"24","hashOfConfig":"15"},{"size":2194,"mtime":1669304468535,"results":"25","hashOfConfig":"15"},{"size":565,"mtime":1668988349651,"results":"26","hashOfConfig":"15"},{"size":654,"mtime":1668971498782,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1uzn3i6",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"30"},"C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\index.js",[],["62","63"],"C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\App.js",[],"C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\reportWebVitals.js",[],"C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\components\\NavBar.jsx",["64"],"import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from '../styles/NavBar.module.css'\r\nexport default function NavBar(){\r\n    let url\r\n    React.useEffect(() => {\r\n    \r\n         url = window.location.href;\r\n         url.toString()\r\n         console.log(typeof url)\r\n        \r\n       }, []);\r\n    return(\r\n        <React.Fragment>\r\n            <nav>\r\n            <ul className={styles.navbar}>\r\n                <li className={(url === 'http://localhost:3000/dogs') && styles.selected  }><NavLink exact to={\"/dogs\"}>Home</NavLink></li>\r\n                <li><NavLink exact to={\"/dogs/create-breed\"}>Create Breed</NavLink></li>\r\n                <li>About</li>\r\n            </ul>\r\n            </nav>\r\n            \r\n        \r\n        </React.Fragment>\r\n    )\r\n}","C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\components\\Home.jsx",["65","66","67","68","69"],"import React from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport {\r\n  getAllDogs,\r\n  getTemperaments,\r\n  filterByTempers,\r\n  getOrdered,\r\n  getOrderedByWeight\r\n} from \"../actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DogCard from \"./DogCard\";\r\nimport home from \"../styles/Home.module.css\";\r\nimport Paginado from \"./pages\";\r\nconst Home = () => {\r\n  let {dogs} = useSelector((state) => state);\r\n  console.log(`home ${dogs}`)\r\n  let temperaments = useSelector((state) => state.temperaments);\r\n\r\n  let [tempersSelected, setTempersSelected] = React.useState({\r\n    temperaments: [],\r\n  });\r\n  let [input, setInput] = React.useState({\r\n    name: \"\",\r\n  });\r\n  let [alfabetic, setAlfabetic] = React.useState({\r\n    state: \"ascendant\",\r\n  });\r\n  let [weight,setWeight] = React.useState({\r\n    state:''\r\n  })\r\n  const dispatch = useDispatch();\r\n  let [currentPage, setCurrentPage] = React.useState(1);\r\n  let [dogsPerPage, setDogsPerPage] = React.useState(8);\r\n  const indexOfLastDog = currentPage * dogsPerPage;\r\n  const indexOfFirstDog = indexOfLastDog - dogsPerPage; //\r\n  let currentDogs = dogs && dogs.slice(indexOfFirstDog, indexOfLastDog);\r\n\r\n  const paginado = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  let handleChange = (e) => {\r\n    e.preventDefault();\r\n    setInput((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n    //si lleva seg parametro,devolver solos los tempers q coincidan\r\n    dispatch(getAllDogs(e.target.value));\r\n  };\r\n\r\n  let handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    \r\n      dispatch(getAllDogs(input.name));\r\n    \r\n\r\n    dispatch(getTemperaments());\r\n  }, [dispatch, input]);\r\n\r\n  let handleChangeSelect = (e) => {\r\n    if (!tempersSelected.temperaments.includes(e.target.value)) {\r\n      let str =\r\n        e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1);\r\n\r\n      let newTempers = {\r\n        ...tempersSelected,\r\n        temperaments: [...tempersSelected.temperaments, str],\r\n      };\r\n\r\n      setTempersSelected(newTempers);\r\n\r\n      dispatch(filterByTempers(newTempers.temperaments));\r\n    }\r\n  };\r\n\r\n  let handleDeleteTemper = (e) => {\r\n    let updated = tempersSelected.temperaments.filter(\r\n      (temper) => temper !== e.target.value\r\n    );\r\n    setTempersSelected((prev) => ({\r\n      ...prev,\r\n      temperaments: tempersSelected.temperaments.filter(\r\n        (temper) => temper !== e.target.value\r\n      ),\r\n    }));\r\n    dispatch(filterByTempers(updated));\r\n    console.log(tempersSelected.temperaments);\r\n  };\r\n  let handleAlfabetic = (e) => {\r\n    let state = e.target;\r\n    console.log(state.value);\r\n    let obj = { state: state.value };\r\n    setAlfabetic(obj);\r\n    dispatch(getOrdered(obj));\r\n  };\r\n  let handleWeight = (e) => {\r\n    let state = e.target;\r\n    console.log(state.value);\r\n    let obj = { state: state.value };\r\n    setWeight(obj);\r\n    dispatch(getOrderedByWeight(obj));\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className={home.filter_container}>\r\n        <div className={home.nameFilter}>\r\n          <h3>Filter by:</h3>\r\n          <label>Name</label>\r\n          <input\r\n            type={\"text\"}\r\n            name={\"name\"}\r\n            value={input.name}\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n          <select\r\n            onChange={(e) => handleAlfabetic(e)}\r\n            name=\"alfabetic\"\r\n            id=\"alfabetic\"\r\n            placeholder=\"Ascendant/Descentent\"\r\n          >\r\n            <option hidden disabled selected value>\r\n              Alfabetic Order\r\n            </option>\r\n\r\n            <option name=\"ascendente\" value={\"ascendente\"}>\r\n              Ascendant\r\n            </option>\r\n            <option name=\"descendente\" value={\"descendente\"}>\r\n              Descendent\r\n            </option>\r\n          </select>\r\n          <select\r\n          onChange={(e) => handleWeight(e)}\r\n          name=\"weight\"\r\n          id=\"weight\"\r\n          >\r\n            <option hidden disabled selected value>Order by weight</option>\r\n            <option name=\"heavier\" value={\"heavier\"}>Heavier</option>\r\n            <option name=\"lighter\" value={\"lighter\"}>Lower</option>\r\n\r\n          </select>\r\n          \r\n        </div>\r\n\r\n        <div className={home.temperamentsFilter}>\r\n          <label>Temperament/s</label>\r\n\r\n          <select\r\n            onChange={(e) => handleChangeSelect(e)}\r\n            name=\"temperament\"\r\n            id=\"temperament\"\r\n            placeholder=\"Temperaments\"\r\n          >\r\n            <option hidden disabled selected value>\r\n              Temperaments\r\n            </option>\r\n            {temperaments &&\r\n              temperaments.map((temper) => (\r\n                <option value={temper.name} name=\"temperaments\" key={temper.id}>\r\n                  {temper.name}\r\n                </option>\r\n              ))}\r\n          </select>\r\n\r\n          <div className={home.selectedTemperaments}>\r\n            <h3>Selected Temperaments</h3>\r\n\r\n            {tempersSelected.temperaments &&\r\n              tempersSelected.temperaments.map((temper) => (\r\n                <div className={home.temperament}>\r\n                  <h4>{temper}</h4>\r\n                  <button\r\n                    className=\"close\"\r\n                    value={temper}\r\n                    onClick={(e) => handleDeleteTemper(e)}\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n        <form className=\"filter\"></form>\r\n      </div>\r\n      <div className={home.dogs}>\r\n        {currentDogs &&\r\n          currentDogs.map((dog) => {\r\n            return (\r\n              <DogCard\r\n                key={dog.id}\r\n                id={dog.id}\r\n                name={dog.name}\r\n                temperament={dog.temperament}\r\n                weight={dog.weight}\r\n                height={dog.height}\r\n                image={dog.image?.url}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n      <Paginado\r\n        dogsPerPage={dogsPerPage}\r\n        dogs={dogs && dogs.length}\r\n        paginado={paginado}\r\n      ></Paginado>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\components\\CreateBreed.jsx",["70"],"import React from \"react\";\r\nimport * as actions from \"../actions/actions.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport createBreed from \"../styles/CreateBreed.module.css\";\r\nexport function validate(input) {\r\n  let errors = { name: \"no data\", maxMin: \"no data\" };\r\n\r\n  console.log(input);\r\n\r\n  if (\r\n    (input.max_height <= input.min_height) ||\r\n    (input.max_weight <= input.min_weight) ||\r\n    (input.max_life <= input.min_life)\r\n  ) {\r\n    errors = {...errors,maxMin : 'Some value of max-min is incongruent'}\r\n    \r\n  } else {\r\n    errors = {...errors,maxMin : 'max-min values are correct'}\r\n  }\r\n  if (input.name === \"\") {\r\n    errors = {...errors,name : 'Name of breed is required'}\r\n    \r\n  } else if (!/([A-Z])/.test(input.name)) {\r\n    errors = {...errors,name : 'Username is invalid'}\r\n    \r\n    \r\n  } else {\r\n    errors = {...errors,name : 'Name is correct'}\r\n  }\r\n  console.log(errors);\r\n  return errors;\r\n}\r\nexport default function CreateBreed() {\r\n  let [input, setInput] = React.useState({\r\n    name: \"\",\r\n    max_height: 0,\r\n    min_height: 0,\r\n    max_weight: 0,\r\n    min_weight: 0,\r\n    max_life: 0,\r\n    min_life: 0,\r\n    temperaments: [],\r\n  });\r\n  const [errors, setErrors] = React.useState({\r\n    name: \"no data\",\r\n    maxMin: \"no data\",\r\n  });\r\n  \r\n  const dispatch = useDispatch();\r\n  let temperaments= useSelector((state) => state.temperaments);\r\n  React.useEffect(() => {\r\n    \r\n   if(temperaments.length === 0){\r\n    dispatch(actions.getTemperaments())\r\n   }\r\n  }, []);\r\n\r\n  \r\n  \r\n\r\n  let handleChange = (e) => {\r\n    e.preventDefault();\r\n    setInput((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n\r\n    setErrors(\r\n      validate({\r\n        ...input,\r\n        [e.target.name]: e.target.value,\r\n      })\r\n    );\r\n  };\r\n  let handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(e);\r\n    let weight = `${input.min_weight} - ${input.max_weight}`;\r\n    let height = `${input.min_height} - ${input.max_height}`;\r\n    let life_span = `${input.min_life} - ${input.max_life} yeas`;\r\n\r\n    let obj = {\r\n      name: input.name,\r\n      weight,\r\n      height,\r\n      life_span,\r\n      temperaments: input.temperaments,\r\n    };\r\n\r\n    dispatch(actions.createDog(obj));\r\n  };\r\n\r\n  let handleChangeSelect = (e) => {\r\n    if (!input.temperaments.includes(e.target.value)) {\r\n      setInput((prev) => ({\r\n        ...prev,\r\n        temperaments: [...input.temperaments, e.target.value],\r\n      }));\r\n    }\r\n  };\r\n  let handleDeleteTemper = (e) => {\r\n    console.log(input.temperaments);\r\n    console.log(e.target.value);\r\n\r\n    setInput((prev) => ({\r\n      ...prev,\r\n      temperaments: input.temperaments.filter(\r\n        (temper) => temper !== e.target.value\r\n      ),\r\n    }));\r\n    console.log(input.temperaments);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <h1>Create Breed</h1>\r\n      <div className={createBreed.mainContainer}>\r\n        <form\r\n          className={createBreed.mainForm}\r\n          onSubmit={(e) => handleSubmit(e)}\r\n        >\r\n          <div className={createBreed.formDiv}>\r\n          <h2>Registration</h2>\r\n            <label>Name</label>\r\n            <input\r\n              type={\"text\"}\r\n              name={\"name\"}\r\n              value={input.name}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className={createBreed.formDiv}>\r\n            <label>Height</label>\r\n            <input\r\n              name={\"min_height\"}\r\n              type={\"number\"}\r\n              placeholder=\"min height\"\r\n              value={input.min_height}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n            <input\r\n              name={\"max_height\"}\r\n              type={\"number\"}\r\n              value={input.max_height}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className={createBreed.formDiv}>\r\n            <label>Weight</label>\r\n            <input\r\n              name={\"min_weight\"}\r\n              type={\"number\"}\r\n              placeholder=\"min weight\"\r\n              value={input.min_weight}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n            <input\r\n              name={\"max_weight\"}\r\n              type={\"number\"}\r\n              placeholder=\"max weight\"\r\n              value={input.max_weight}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className={createBreed.formDiv}>\r\n            <label>Life's Span</label>\r\n            {/* van como int pero al guardarse en DB queda como strings \"10 - 15 yeas\" */}\r\n            <input\r\n              name={\"min_life\"}\r\n              type={\"number\"}\r\n              placeholder=\"min life\"\r\n              value={input.min_life}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n            <input\r\n              name={\"max_life\"}\r\n              type={\"number\"}\r\n              placeholder=\"max life\"\r\n              value={input.max_life}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n\r\n            <select\r\n              onChange={(e) => handleChangeSelect(e)}\r\n              name=\"temperament\"\r\n              id=\"temperament\"\r\n              disabled={(input.temperaments.length >= 7) && true}\r\n            >\r\n              <option hidden disabled selected value>\r\n                Temperaments\r\n              </option>\r\n              {temperaments &&\r\n                temperaments.map((temper) => (\r\n                  <option\r\n                    value={temper.name}\r\n                    name=\"temperaments\"\r\n                    key={temper.id}\r\n                  >\r\n                    {temper.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n          <input\r\n          className={createBreed.submit}\r\n            type=\"submit\"\r\n            value={\"Create Breed\"}\r\n            disabled={errors.name !== 'Name is correct' || errors.maxMin !== 'max-min values are correct'}\r\n          />\r\n          \r\n            {errors.name !== 'no data' &&(\r\n              <p >{errors.name}</p>\r\n            )}\r\n            {errors.maxMin !== 'no data' &&(\r\n              <p>{errors.maxMin}</p>\r\n            )}\r\n            {input.temperaments.length >= 7 &&(\r\n              <p>Maximum amount of temperaments reached</p>\r\n            )}\r\n\r\n\r\n          \r\n        </form>\r\n\r\n        <div className={createBreed.selectedTempers}>\r\n          <h2>Selected temperaments</h2>\r\n          {input.temperaments &&\r\n            input.temperaments.map((temper) => (\r\n              <div className={createBreed.temperSelected}>\r\n                <h4>{temper}</h4>\r\n                <button\r\n                  className=\"close\"\r\n                  value={temper}\r\n                  onClick={(e) => handleDeleteTemper(e)}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\components\\Landing-page.jsx",[],"C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\store\\store.js",[],"C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\reducer\\reducer.js",["71"],"import {\r\n  GET_ALL_DOGS,\r\n  GET_DOG_BY_ID,\r\n  CREATE_DOG,\r\n  GET_DOG_BY_NAME,\r\n  GET_TEMPERAMENTS,\r\n  FILTER_BY_TEMPERS,\r\n  GET_ORDERED,\r\n  GET_ORDERED_BY_WEIGHT,\r\n} from \"../actions/actions\";\r\nconst initialState = {\r\n  dogs: [],\r\n  dogDetail: {},\r\n  temperaments: [],\r\n  backUp: [],\r\n};\r\nexport default function rootReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ALL_DOGS:\r\n      return { ...state, dogs: action.payload, backUp: action.payload };\r\n    case GET_DOG_BY_ID:\r\n      return { ...state, dogDetail: action.payload };\r\n    case CREATE_DOG:\r\n      return \"dog created\";\r\n    case GET_DOG_BY_NAME:\r\n      return { ...state, dogs: action.payload };\r\n    case GET_TEMPERAMENTS:\r\n      return { ...state, temperaments: action.payload };\r\n\r\n    case FILTER_BY_TEMPERS:\r\n      let filteredDogs = [...state.backUp];\r\n      console.log(action.payload)\r\n      for (let i = 0; i < action.payload.length; i++) {\r\n        filteredDogs = filteredDogs.filter((e) =>\r\n          e.temperament?.includes(action.payload[i])\r\n        );\r\n      }\r\n      console.log(filteredDogs)\r\n      \r\n      return { ...state, dogs: filteredDogs };\r\n\r\n    case GET_ORDERED:\r\n      let ordered = state.dogs.sort((a, b) => {\r\n        if (a.name > b.name) {\r\n          return 1;\r\n        }\r\n        if (a.name < b.name) {\r\n          return -1;\r\n        }\r\n        return 0;\r\n      });\r\n      if (action.payload.state === \"ascendente\") {\r\n        return { ...state, dogs: ordered };\r\n      } else if (action.payload.state === \"descendente\") {\r\n        let reversed = ordered.reverse();\r\n        return { ...state, dogs: reversed };\r\n      } else {\r\n        break;\r\n      }\r\n    case GET_ORDERED_BY_WEIGHT:\r\n      let firstNumber, secondNumber;\r\n\r\n      let weightOrdered = state.dogs.sort((a, b) => {\r\n        firstNumber = parseInt(a.weight[0] + a.weight[1]);\r\n        secondNumber = parseInt(b.weight[0] + b.weight[1]);\r\n    \r\n\r\n        if (firstNumber > secondNumber) return 1;\r\n        if (firstNumber < secondNumber) return -1;\r\n        return 0;\r\n      });\r\n      if (action.payload.state === \"lower\") {\r\n        return { ...state, dogs: weightOrdered };\r\n      }\r\n      if (action.payload.state === \"heavier\") {\r\n        let invertWeight = weightOrdered.reverse();\r\n\r\n        return { ...state, dogs: invertWeight };\r\n      }\r\n\r\n    // return { ...state, temperaments: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\components\\Detail.jsx",["72","73","74"],"import React, { useEffect } from 'react';\r\nimport * as actions from \"../actions/actions\";\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport detail from '../styles/Detail.module.css'\r\n//componente cuando se hace click en un perro o se busca por id\r\nexport default function Detail(props){\r\n    \r\n\r\n    const dispatch = useDispatch();\r\n    const dog = useSelector(state => state.dogDetail);\r\n    const dogId = props.match.params.id;\r\n    React.useEffect(()=>{\r\n         dispatch(actions.getDogById(dogId));\r\n         \r\n    },[])\r\n    \r\n    return(\r\n        <div className={detail.mainContainerDetail}>\r\n            \r\n            <h1>{dog.name}</h1>\r\n            <img src={dog.image && dog.image} ></img>\r\n            <h3>Temperaments : {dog.temperament}</h3>\r\n            <h3>Height : {dog.height}</h3>\r\n            <h3>Life span : {dog.life_span}</h3>\r\n        </div>\r\n    )\r\n}","C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\actions\\actions.js",[],"C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\components\\DogCard.jsx",["75"],"import * as actions from '../actions/actions.js';\r\nimport {NavLink} from 'react-router-dom';\r\nimport card from '../styles/DogCard.module.css'\r\n\r\n\r\nconst DogCard =  (props) =>{\r\n    \r\n   \r\n    return(\r\n        \r\n    <div  className={card.card}><NavLink exact to={\"/dogs/\"+props.id}>\r\n            <h3> {props.name}</h3>\r\n            <img src= {props.image}  alt=\"dog-img\" />\r\n            <h4>Weight : {props.weight} Kg</h4>\r\n            <h4>Temperaments : {props.temperament}</h4>\r\n\r\n            \r\n\r\n\r\n            </NavLink></div>\r\n    )\r\n}\r\n\r\nexport default DogCard;","C:\\Users\\bruno\\Desktop\\Coding\\SoyHenry\\Bootcamp\\PI\\PI-Dogs-main\\PI-Dogs-main\\PI-Dogs-main\\client\\src\\components\\pages.jsx",["76"],"import React from \"react\";\r\nimport s from '../styles/pages.module.css'\r\n\r\nconst Paginado = ({dogsPerPage,dogs,paginado}) =>{\r\n\r\n\r\n   \r\n    \r\n\r\n    const pageNumbers = [];\r\n\r\n    for(let i = 1; i<= Math.ceil(dogs/dogsPerPage);i++){\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n    return(\r\n        \r\n            <ul className={s.paginado}>\r\n                {pageNumbers && pageNumbers.map(e =>\r\n                {\r\n                    return(<li className=\"number\" key={e}> \r\n                    <a onClick={()=> paginado(e)}>{e}</a>\r\n\r\n                    </li>)\r\n                })}\r\n            </ul>\r\n        \r\n    )\r\n\r\n\r\n\r\n\r\n};\r\n\r\nexport default Paginado;\r\n",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":8,"column":16,"nodeType":"83","endLine":8,"endColumn":36},{"ruleId":"84","severity":1,"message":"85","line":2,"column":8,"nodeType":"86","messageId":"87","endLine":2,"endColumn":14},{"ruleId":"84","severity":1,"message":"88","line":25,"column":8,"nodeType":"86","messageId":"87","endLine":25,"endColumn":17},{"ruleId":"84","severity":1,"message":"89","line":28,"column":8,"nodeType":"86","messageId":"87","endLine":28,"endColumn":14},{"ruleId":"84","severity":1,"message":"90","line":33,"column":21,"nodeType":"86","messageId":"87","endLine":33,"endColumn":35},{"ruleId":"84","severity":1,"message":"91","line":49,"column":7,"nodeType":"86","messageId":"87","endLine":49,"endColumn":19},{"ruleId":"81","severity":1,"message":"92","line":56,"column":6,"nodeType":"93","endLine":56,"endColumn":8,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":82,"column":5,"nodeType":"97","messageId":"98","endLine":83,"endColumn":20},{"ruleId":"84","severity":1,"message":"99","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"100","line":15,"column":7,"nodeType":"93","endLine":15,"endColumn":9,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":21,"column":13,"nodeType":"104","endLine":21,"endColumn":48},{"ruleId":"84","severity":1,"message":"105","line":1,"column":13,"nodeType":"86","messageId":"87","endLine":1,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":22,"column":21,"nodeType":"104","endLine":22,"endColumn":51},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"react-hooks/exhaustive-deps","Assignments to the 'url' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","MemberExpression","no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'alfabetic' is assigned a value but never used.","'weight' is assigned a value but never used.","'setDogsPerPage' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'dispatch' and 'temperaments.length'. Either include them or remove the dependency array.","ArrayExpression",["110"],"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'useEffect' is defined but never used.","React Hook React.useEffect has missing dependencies: 'dispatch' and 'dogId'. Either include them or remove the dependency array.",["111"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'actions' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [dispatch, temperaments.length]",{"range":"116","text":"117"},"Update the dependencies array to be: [dispatch, dogId]",{"range":"118","text":"119"},[1516,1518],"[dispatch, temperaments.length]",[534,536],"[dispatch, dogId]"]